---
import CandlestickWatchlist from "@components/charts/CandlestickWatchlist.astro";

interface Props {
	securities: Array<{
		symbol: string;
		name: string;
		sector: string;
		subIndustry: string;
	}>;
}

const { securities } = Astro.props;
---

<watchlist-chart>
	<CandlestickWatchlist
		symbol={securities[0].symbol}
		interval="1d"
		weeks="13"
		endDate="2023-12-09"
	/>
</watchlist-chart>

<script>
	import { symbolChange$ } from "~/scripts/observables";

	class WatchlistChart extends HTMLElement {
		symbolButtons: NodeList | null = null;

		handleSymbolClick = (event: Event) => {
			if (event.target && event.target instanceof HTMLElement) {
				console.log(event.target.dataset.symbol);
				symbolChange$.next(event.target.dataset.symbol);
			}
		};

		connectedCallback() {
			this.symbolButtons = this.querySelectorAll(".watchlist__symbol");

			for (const button of Array.from(this.symbolButtons)) {
				button.addEventListener("click", this.handleSymbolClick);
			}
		}

		disconnectedCallback() {
			for (const button of Array.from(this.symbolButtons!)) {
				button.removeEventListener("click", this.handleSymbolClick);
			}
		}
	}

	customElements.define("watchlist-chart", WatchlistChart);
</script>

<style lang="scss">
	@use "../../../styles/variables";
</style>
